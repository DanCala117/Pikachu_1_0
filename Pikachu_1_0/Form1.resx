<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="AutomatedTestToolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="textBox2.Text" xml:space="preserve">
    <value>This test is designed to test presentation mode for either Zebra or 
competitor scanners by presenting a barcode placed on the 
belt drive infront of a stationary scanner posted at the front of the 
belt drive. The belt drive will then repeat moving back and forth
between the ends of the two belt drive. 
</value>
  </data>
  <data name="textBox1.Text" xml:space="preserve">
    <value>This test is designed to test presentation mode for either Zebra or 
competitor scanners by presenting a barcode placed on the 
belt drive infront of a stationary scanner posted at the front of the 
belt drive. The belt drive will then repeat moving back and forth
between the end of the belt drive and the stop point however many
times the user specifies. Then, the stop point will be incremented by
the user specified increment, and repeat. This will continue until the
belt drive reaches it's end distance.

</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB4AAAEAIACgDwAAFgAAACgAAAAgAAAAPAAAAAEAIAAAAAAAAA8AAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn6ysAPj//wAw9P8AEnCbACQtQQAAAAAANFNYACdC
        SgAiQ0sAK1thABxETQA0angMG46fgyqstMBInZiEJDQVAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFj5A8g62sgjqqs2YSY5QUEuLwABaC
        jwAY9v8AGQAAASAAAgYvUFYLHigtChp7jjgVmL3ZFqba/yOfzeEmXHMmW1lUAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHKQkGhaxNT5Gaff+xGI
        0cgWepd2FnJ/Uxieqngbsr6hILrEth+4wsQSmKu9DLvZ5wvE5v0Px+j/Lsjf/kiio4o6NjEEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6aWgADVVcGBWa
        usoSveL/E77b/xa0xf8ZxND8Hdnj/x7e6P8c3+n/FsXU/w3H4P8Jz+//D9Du/y/h7P9i8uz/kt/Y7YqY
        kkEvJR0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxe
        XQcjrLmGHNDn9xXS6v8Sx97/FNLp/xrd6/8c3ev/Ftzr/xHX6P8Ou9D/CtDt/wzR7v8c2+3/Tu7r/373
        7f++8u7/ssG9mElwvgA2Rk8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAfJmdN2Td3u8k3e//E9Dv/xXQ7/8W0e7/E9Lv/xDS7/8Kz+//D9Hr/xS/0v8Q0O7/EtPv/zrn
        7P949e3/m/bw/8T28/+0xsTbOT9OSDZGUA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABZGSQCZnaA5nN3e8SjR5/8Sz/H/FM/x/w/O8f8JyPL/CMfv/wrD7f8MyfH/FMfi/xPL
        6/8S0PH/S+jt/4v17/+89PL/0fj2/6e7wP81P1reMkRMNDdHUQAmMx4AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABUAAAAAAAAATyLlTVpqLrZHqzm/xHL9P8PzfL/Dcrz/w3B5P8Ps9b/DKXR/w2h
        3f8OvO3/Es7x/xHN8/8x4e7/d/Tu/7P18//Q+Pf/qb7C9zI8WeAtO1RvMUFJFGKRqgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAfnatHIMXa3SfM4vw/tt//G8fu/xjW8v8UxOP/Eb3a/wzM
        7/8Iy/D/DMTq/w225f8OzfH/DtHy/yXb8f9i8O//k/Hu/8Tv7v+9zcy/O0ZjkEZWgflOYoW9PldjJQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMXk0wDM5tYAUQAAAR+jwp8e0+3/TOPy/5be5P880+D/KuDs/xi/
        1P8V0e//Lt/x/zXm7/8r6O7/H97v/xnZ8P8g3+//IeLv/1Px8P+Dx8r/Y3SJ/1eXp+c1iLbhU3ij5Vdt
        iXs+WmIQAAAAAAAAAAAAAAAAAAAAAAAAAADS5ckAwuTXCc7n1ghMAAAAHYO+fzSz2/+R5ej/f8jJ/1nj
        4f9S7er/KsHN/03h5/+W5uT/o+Xi/5r28f+I9O//YvLt/2r07v9/9fD/rPj0/83p6f92iJz/NLbH/zHV
        5P01nKZ/JgAAAzqGhQA4My8AAAAAAAAAAAAAAAAAzObUAM/kzAzW5sSN1uXIUaq0rQAjc6QnJ5DQ3z+y
        1f8uxdj/K9/x/y/j8f8k0OX/Q8/c/5nk5P/O7ez/1/b1/8/19P/A9vP/zvf1/9Xz8v/A1db/3e3r/8XR
        0d4+vL6qNuvt/DXk5+c7y8mDMJGMGeb//wAACQAAAAAAAAAAAADj5bEA2uS9Z9/lvfLZ5sVdp7KpICuB
        r3YawOPtFsPt/xW86f8XvOH/G8rq/xPR9P9D5PH/nd/r/6i+5f/J2+r/4PTv/9/17//h9/T/4PTx/3mC
        kv9reI7/r7m4kjd/ehMyy8+dMOnw/T7y7/5u4drKpby0RAAJAAAAAAAAAAAAANznxG3g58TW4uXB/9rf
        s87Q0LXcYZTE+hHL8f8Rv+L/Fbzj/x3N6f8i2Or/Hd/z/z/g7/9cjuD/dnDk/4yKx//c4L3/5+W0/+bt
        0P/s+fX/ucTK/1lkjPBPWm88NNDTADCMijIt0tjhM/L1/1fr5N2axbpHAAkAAAAAAAAAAAAA3+nH3uDq
        yO3h5brx3tuq/pycrf9Dmsn/EKi//xXK6v8c2PD/JN7u/yTN4v8gk6X/WLfD/4+g3v/Hrsf/0sGs/+LW
        nf/q3Z3/5+Kj/+jy4P/c6OX/g4yapy5GSRAxrKpbL9PYyynl7/sr3N7NLLqvOf///wAACQAAAAAAAAAA
        AADi7c6J4u3RUODmwZ7h4b7/Xa2z/xSXtf8gV2X/EMPk/xbQ9f8j1+f/Srq9/0VQV/9CSl//vcfY/8C/
        xv/b3rb/5uKo/+rgrP/n4ab/5eq+/9XWsP6BpY6OMcXGoDHf5fcu6/T/KdLZ3CKYlTA22tUAK3huAAAA
        AAAAAAAAAAAAAAAjAADR5L4A3ejHHeDjtItpv7bPKLjO/jWxx/8X0PP/Gtfy/yrm7/967On/f5SU/2h2
        dv/b7+z/4fbt/+Dw2//i7Mr/6OWy/+jktP/i367+tLmN6UPGvvMy5/D/L+vz/y7s8/8v4+bxM9TRki+7
        tyj///8ARbu0AF9mZAAAAAAA+vvzAPr89gDd6MUA5ff9AzWVnS4Zv9DfGtPs/xjT8/8e2fL/Lubw/4T2
        8f/T8fD/zebk/8L18v+q+PP/2Pj1/+T27//j7cn/5ue9/8HAlMSGj2g1LrvAiC3k7fss6vP/L+3z/zLy
        8/818vL/Mern3SzY0YRAsqsm////ALLBvAAAAAAAAAAAAAAAAADm7dkAAAAAARqquHQY0un6FtT0/xzZ
        8v8n4fH/R+3v/5r38v/U9/X/lvXx/1fx7/+u9/P/z/j1/9/49P/U49fmk52JPpuoegBBlJIMM9LYnCvm
        8P8q6fT/Le70/y/x9P8q9PT/Mffx/5Du6N3I3NqJn6+qJgAAAAAAAAAAAAAAAAAAAAAVPUAAOWWCJTCq
        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
        //8=
</value>
  </data>
</root>